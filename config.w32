ARG_ENABLE('async', 'async support', 'yes');

X64 = toolset_is_64();

if (PHP_ASYNC != 'no') {
	AC_DEFINE('HAVE_ASYNC', 1, 'async support enabled');
	
	ADD_FLAG('CFLAGS', '/I ' + configure_module_dirname);
	ADD_FLAG('CFLAGS', '/I ' + configure_module_dirname + '\\include');
	
	ADD_FLAG('LDFLAGS', '/NODEFAULTLIB:LIBCMT');
		
	var async_source_files = [
		'php_async.c'
	];
	
	var async_src = [
		'channel.c',
		'console.c',
		'context.c',
		'deferred.c',
		'dns.c',
		'event.c',
		'fiber\\winfib.c',
		'filesystem.c',
		'helper.c',
		'pipe.c',
		'process\\builder.c',
		'process\\env.c',
		'process\\runner.c',
		'socket.c',
		'ssl\\api.c',
		'ssl\\bio.c',
		'ssl\\engine.c',
		'stream.c',
		'sync.c',
		'task.c',
		'tcp.c',
		'thread.c',
		'udp.c',
		'watcher\\monitor.c',
		'watcher\\poll.c',
		'watcher\\signal.c',
		'watcher\\timer.c',
		'xp\\socket.c',
		'xp\\tcp.c',
		'xp\\udp.c'
	];
	
	for (var i = 0; i < async_src.length; i++) {
		async_source_files.push('src\\' + async_src[i]);
	}
	
	// Build libuv as part of the extension.
	
	CHECK_LIB("advapi32.lib", 'async');
	CHECK_LIB("iphlpapi.lib", 'async');
	CHECK_LIB("psapi.lib", 'async');
	CHECK_LIB("shell32.lib", 'async');
	CHECK_LIB("user32.lib", 'async');
	CHECK_LIB("userenv.lib", 'async');
	CHECK_LIB("ws2_32.lib", 'async');
	
	ADD_FLAG('CFLAGS', '/I ' + configure_module_dirname + '\\thirdparty\\libuv\\include');
	ADD_FLAG('CFLAGS', '/I ' + configure_module_dirname + '\\thirdparty\\libuv\\src');
	
	var uv_src = [
		'fs-poll.c',
		'idna.c',
		'inet.c',
		'strscpy.c',
		'threadpool.c',
		'timer.c',
		'uv-data-getter-setters.c',
		'uv-common.c',
		'version.c'
	];
	
	for (var i = 0; i < uv_src.length; i++) {
		async_source_files.push('thirdparty\\libuv\\src\\' + uv_src[i]);
	}
	
	var uv_win = [
		'async.c',
		'core.c',
		'detect-wakeup.c',
		'dl.c',
		'error.c',
		'fs-event.c',
		'fs.c',
		'getaddrinfo.c',
		'getnameinfo.c',
		'handle.c',
		'loop-watcher.c',
		'pipe.c',
		'poll.c',
		'process-stdio.c',
		'process.c',
		'signal.c',
		'stream.c',
		'tcp.c',
		'thread.c',
		'tty.c',
		'udp.c',
		'util.c',
		'winapi.c',
		'winsock.c'
	];
	
	for (var i = 0; i < uv_win.length; i++) {
		async_source_files.push('thirdparty\\libuv\\src\\win\\' + uv_win[i]);
	}

	PHP_INSTALL_HEADERS('ext/async', 'php_async.h thirdparty\\libuv\\include\\uv.h');

	var ret = SETUP_OPENSSL('async', PHP_ASYNC);
	
	if (ret > 0) {
		MESSAGE('Enabling SSL support for ext\\async: ' + ret);
		AC_DEFINE("HAVE_ASYNC_SSL", 1);
	}

	EXTENSION('async', async_source_files.join(' '), PHP_ASYNC_SHARED, '/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1');
}
